<html>
<head>
    <meta charset="utf-8">
    <title>Minaiev Alexandr_str</title>
</head>
<body>
<?php

//****** Работа с регистром символов ******

//1. Дана строка 'Привет, мир!'. Сделайте из нее строку 'ПРИВЕТ МИР!'.
$w = "Hello, world!";
$w = strtoupper($w);
echo "1. " . $w . "<br />";

//2. Дана строка 'PHP'. Сделайте из нее строку 'php'.
$php = "PHP";
$php = strtolower($php);
echo "2. " . $php . "<br />";

//3. Дана строка 'москва'. Сделайте из нее строку 'Москва'.
$m = "moscow";
$m = ucfirst($m);
echo "3. " . $m . "<br />";

//4. Дана строка 'МОСКВА'. Сделайте из нее строку 'Москва'.
$M = "MOSCOW";
$M = strtolower($M);
$M = ucfirst($M);
echo "4. " . $M . "<br />";

//5. Дана строка 'иванов иван иванович'. Сделайте из нее строку 'Иванов Иван Иванович'.
$iv = "ivanov ivan ivanovich";
$iv = ucwords($iv);
echo "5. " . $iv . "<br />";

//****** Работа с strlen, substr ******

//6. Дана строка 'я учу PHP!'. Найдите количество символов в этой строке.
$ln = "I am learn PHP!";
echo "6. " . strlen($ln) . "<br />";

//7. Дана строка 'я учу PHP!'. Вырежете из нее слово 'учу' и слово 'PHP'.
$cut = substr("i am learn PHP!", 0, 4);
echo "7. " . $cut . "<br />";

/*
8. Дана переменная $str, в которой хранится какой-либо текст. Реализуйте обрезание длинного
текста по следующему принципу: если количество символов этого текста больше заданного в
переменной $n, то в переменную $result запишем первые $n символов строки $str и добавим
в конец многоточие '...'. В противном случае в переменную $result запишем содержимое
переменной $str.
*/
echo "8. ";
$str = "Stanley Jordan - Over the Rainbow.mp3";
$n = 14;
//$n = 50;
$result = 0;
if ($n < strlen($str)) {
    $result = substr($str, 0, $n);
    echo $result . "...<br />";
} else {
    $result = $str;
    echo $result . "<br />";
}
unset($str);
/*
9. Напишите функцию, которая генерирует пароль. Функция должна принимать параметр.
Параметр должен задавать количество символов в пароле.
*/
echo "9. ";
function pass($x)
{
    $en = array(
        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
        'o',
        'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'y', 'z', 'A', 'B', 'C', 'D',
        'E',
        'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
        'T',
        'U', 'V', 'W', 'X', 'Y', 'Z'
    );
    $pass = "";
    for ($i = 0; $i < $x; $i++) {
        $index = rand(0, count($en) - 1);
        $pass .= $en[$index];
    }
    return $pass;
}

echo pass(10) . "<br />";

/*
10. Создайте переменную $password. Присвойте переменной $password результат функции из
предыдущего примера. Если количество символов пароля больше 5ти и меньше 10ти,
то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том,
что нужно придумать другой пароль.
*/
echo "10. ";
$password = pass(6);
if (strlen($password) >= 5 && strlen($password) <= 10) {
    echo $password . " - Good password!";
} else {
    echo $password . " - Enter other password!";
}
echo "<br />";
/*
11. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть столько рядов,
чтобы последний элемент пирамидки состоял из одного символа. Первый ряд пирамиды должен
хранится в переменной $str (может иметь различное количество символов).
Подсказка: воспользуйтесь функциями strlen и substr.
xxxxxxxxxx
xxxxxxxxx
xxxxxxxx
xxxxxxx
xxxxxx
*/
echo "11. <br />";
$str = "xxxxxxxxxx";
for ($i = 0; $i <= 10 ; $i++) {
    echo substr($str, 0, strlen($str)-$i) ."<br />";
}

//****** Работа с str_replace *****

//12. Дана строка 'Я-учу-PHP!'. Замените все дефисы на тег '<br>'.
echo "12. ";
$str = "I-am-learn-PHP!";
$a = "-";
$b = " ";
echo str_replace($a, $b, $str) . "<br />";

//13. Дана строка '31.12.2013'. Замените все точки на дефисы.
echo "13. ";
$data = "31.12.2013";
$a = ".";
$b = "-";
echo str_replace($a, $b, $data) . "<br />";

/*
14. Дана строка $str. Замените смайлики ':)', ':(', '^^',которые встречаются в этой строке
на соответсвующие картинки (<img src=''>).
*/
echo "14. ";
$str = ":) :( ^^";
$str2 = array(':)', ':(', '^^');
$str3 = array("<img src='smile/1.gif'>", "<img src='smile/2.gif'>",
              "<img src='smile/3.gif'>");
echo $newstr = str_replace($str2, $str3, $str) . "<br />";

/*
15. Дана переменная $str, в которой хранится строка русского текста. Напишите скрипт,
который запишет транслит этого текста в переменную $translit. Напишите также скрипт, который
выполнит обратную операцию.
*/
echo "15. ";
$str = "Hello, Kitty! Предъявите Ваш билет!";
echo $str . " -> ";
$trans = array(
    'а' => "a", 'б' => "b", 'в' => "v", 'г' => "g", 'д' => "d", 'е' => "e",
    'ё' => "yo", 'ж' => "zh", 'з' => "z",
    'и' => "i", 'й' => "j", 'к' => "k", 'л' => "l", 'м' => "m", 'н' => "n",
    'о' => "o", 'п' => "p", 'р' => "r",
    'с' => "s", 'т' => "t", 'у' => "u", 'ф' => "f", 'х' => "x", 'ц' => "c",
    'ч' => "ch", 'ш' => "sh", 'щ' => "shh",
    'э' => "e`", 'ю' => "yu", 'я' => "ya", 'ы' => "y`", 'ь' => "`", 'ъ' => "``",
    'А' => "A", 'Б' => "B", 'В' => "V",
    'Г' => "G", 'Д' => "D", 'Е' => "E", 'Ё' => "YO", 'Ж' => "ZH", 'З' => "Z",
    'И' => "I", 'Й' => "J", 'К' => "K",
    'Л' => "L", 'М' => "M", 'Н' => "N", 'О' => "O", 'П' => "P", 'Р' => "R",
    'С' => "S", 'Т' => "T", 'У' => "U", 'Ф' => "F",
    'Х' => "X", 'Ц' => "C", 'Ч' => "CH", 'Ш' => "SH", 'Щ' => "SHH", 'Э' => "E`",
    'Ю' => "YU", 'Я' => "YA", 'Ы' => "Y`",
    'Ь' => "`", 'Ъ' => "``",
    'a' => "а", 'b' => "б", 'c' => "ц", 'd' => "д", 'e' => "е", 'f' => "ф",
    'g' => "г", 'h' => "х", 'i' => "и", 'j' => "ж",
    'k' => "к", 'l' => "л", 'm' => "м", 'n' => "н", 'o' => "о", 'p' => "п",
    'q' => "кю", 'r' => "р", 's' => "с", 't' => "т",
    'u' => "у", 'v' => "в", 'w' => "ш", 'x' => "кс", 'y' => "й", 'z' => "з",
    'A' => "А", 'B' => "Б", 'C' => "Ц", 'D' => "Д",
    'E' => "Е", 'F' => "Ф", 'G' => "Г", 'H' => "Х", 'I' => "И", 'J' => "Ж",
    'K' => "К", 'L' => "Л", 'M' => "М", 'N' => "Н",
    'O' => "О", 'P' => "П", 'Q' => "КЮ", 'R' => "Р", 'S' => "С", 'T' => "Т",
    'U' => "У", 'V' => "В", 'W' => "Ш", 'X' => "КС",
    'Y' => "Й", 'Z' => "З"
);
echo strtr($str, $trans) . "<br />";

//****** Работа с explode, implode ******

/*
16. Дана строка 'я учу PHP!'. С помощью функции explode запишите каждое слово
этой строки в отдельный элемент массива.
*/
echo "16. ";
$str = "I am learn PHP!";
$arr_str = explode(" ", $str);
echo $arr_str[0];
echo $arr_str[1];
echo $arr_str[2];
echo $arr_str[3];
echo "<br />";

/*
17. Дан массив с элементами 'html', 'css', 'php', 'js'. С помощью функции implode
создайте строку из этих элементов, разделенных запятыми.
*/
echo "17. ";
$web = array("html", "css", "php", "js");
$webs = implode(", ", $web);
echo $webs . "<br />";

/*
18. В переменной $date лежит дата в формате '20131231'. Преобразуйте эту дату
в формат '31.12.2013'.
*/
echo "18. ";
$date = "20151231";
$date2 = $date[6] . $date[7] . "." . $date[4] . $date[5] . "." . $date[0] . $date[1] . $date[2] . $date[3] . "<br />";
echo $date2;

/*
19. В переменной $date лежит дата в формате '31.12.2013'. Преобразуйте эту дату
в формат '20151231'.
*/
echo "19. ";
$date = "31.12.2013";
$date2 = $date[6] . $date[7] . $date[8] . $date[9] . $date[3] . $date[4] . $date[0] . $date[1] . "<br />";
echo $date2;

//****** Работа с trim, ltrim, rtrim ******

/*
20. Дана строка ' php '. Сделайте из нее 3 разных строки с помощью функций
класса trim: 'php', ' php', 'php '.
*/
echo "20. ";
$php = " php ";
echo trim($php);
echo rtrim($php, " ");
echo ltrim($php, " ");
echo "<br />";

//****** Работа с strip_tags и htmlspecialchars ******

//21. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.
echo "21. ";
$tag = "html, <b>php</b>, js";
echo strip_tags($tag) . "<br />";

/*
22. Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер
не должен преобразовать <b> в жирный.
*/
echo "22. ";
$tag = "html, <b>php</b>, js";
echo htmlentities($tag) . "<br />";

//****** Работа с chr и ord ******

//23. Узнайте код символов 'a', 'b', 'c', пробела.
echo "23. ";
$abc = "abc ";
echo ord($abc[0]) . " " . ord($abc[1]) . " " . ord($abc[2]) . " " . ord($abc[3])
    . "<br />";

/*
24. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы
английского алфавита. Выведите на экран символ с кодом 33.
*/
echo "24. ";
$s33 = "";
echo $s33 = chr(33) . "<br />";

/*
25. Запишите в переменную $str случайный символ — большую букву латинского алфавита.
Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам
латинского алфавита.
*/
echo "25. ";
$str = 0;
$str = chr(rand(65, 90));
echo $str . "<br />";

/*
26. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв
латинского алфавита. Подсказка: воспользуйтесь циклом for или while.
*/
echo "26. ";
$str = 0;
$len = 100;
for ($i = 1; $i <= $len; $i++) {
    $str = chr(rand(97, 122));
    echo $str;
}
echo $str . "<br />";

//****** Работа с substr_count, str_word_count, str_split ******

//27. Дана строка 'Мама мыла раму'. Узнайте количество букв 'a' и 'м', входящих в эту строку.
echo "27. ";
$work = "Mama mila ramu";
echo "В предложении: ". $work ." - ";
echo "Букв 'M' - ". substr_count("Mama mila ramu", "M") .". ";
echo "Букв 'm' - ". substr_count("Mama mila ramu", "m") .". ";
echo "Букв 'a' - ". substr_count("Mama mila ramu", "a") .".<br />";

/*
28. Скопируйте весь текст со страницы php.su, запишите его в переменную $str.
Подсчитайте количество символов и количество слов в даннной строке.
*/
echo "28. ";
$str = "The PHP development team announces the immediate availability of PHP 7.0.0 RC 1.
        This is the sixth pre-release of the new PHP 7 major series. All users of PHP are
        encouraged to test this version carefully, and report any bugs and incompatibilities
        in the bug tracking system.
        THIS    IS A DEVELOPMENT PREVIEW - DO NOT USE IT IN PRODUCTION!
        PHP 7.0.0 RC 1 contains fixes for 27 reported bugs, and altogether over 200 commits with
        various stability improvements for database, array, assert, streams and other functionality.";
$str1 = str_word_count ($str);
echo "Слов в тексте: ". $str1 .". ";
$str2 = strlen ($str);
echo "Символов в тексте: ". $str2 ."<br />";

/*
29. Создайте массив гласных букв. С помощью этого массива подсчитайте количество гласных
в строке $str. Результат представьте в виде ассоциативного массива, где ключами будут
буквы, а элементами их количество.
*/
echo "29. ";
$letters = array ('а', 'е', 'ё', 'и', 'о', 'у', 'ы', 'э', 'ю', 'я');
$str = count($letters);
echo $str ." ";
$arr = array_flip ($letters);
print_r ($arr);
echo "<br />";

//30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.
echo "30. ";
$str = "1234567890";
$arr = str_split($str, 2);
print_r($arr);
echo "<br />";

//****** Работа с str_repeat, strrev ******


//31. Проверьте, является ли пара слов палиндромом (одинаково читается во всех направлениях, котток, носсон).
echo "31. ";
$kottok = "kottok";
$kot = str_split($kottok, 3);
$tok = strrev($kot[0]);
echo ($kot[1] == $tok)? "котток - палиндром" : "слово не является палиндромом ";
$nosson = "nosson";
$nos = str_split($nosson, 3);
$son = strrev($nos[0]);
echo ($nos[1] == $son)? ", носсон - палиндром" : "слово не является палиндромом";
echo "<br />";

/*
32. Дан массив $arr. Найдите в нем все пары слов палиндромов (одинаково читаются во всех
направлениях, котток, носсон). Результат выводите в виде строки формата 'нос — сон'.
Проверьте работу скрипта на массиве $arr из примера. Совет: нужно сделать не один, а два цикла.
$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');
*/
echo "32. ";
$poly = array ("nosson", "kottok");
$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');
$arr_copy = &$arr; //Копируем массив.
$str = implode (",", $arr_copy); // Преобразуем массив в строку.
$arrev = strrev ($str); // Реверсируем строку.
$arr2 = explode (",", $arrev); // Преобразуем обратно в массив (для foreach).
$arr_end = array_reverse ($arr2); // Приводим в соответствие ключи массивов.
foreach ($arr as $value) {
    foreach ($arr2 as $value2) {
        if (($value . $value2) == $poly) {
            echo $value ." - ". $value2 . "; ";
        }
    }
}
echo "<br />";

/*
33. Определите является ли фраза палиндромом. Примеры: 'A roza upala na lapu Asora'.
Обратите внимание на то, что при обратном чтении игнорируются пробелы, запятые, дефисы, тире и
большие буквы (подсказка: значит сначала нужно привести строку к стандартному виду — удалить
лишние символы, привести все к нижнему регистру).
*/
echo "33. ";
$phrase = "A roza - upala, na lapu Azora!?";
$phrase_small = strtolower($phrase); // Переводим в нижний регистрю
$a = array ("-",  ",",  "!",  "?", " ");
$b = "";
$phrase_pure = str_replace ($a, $b, $phrase_small); // Удаляем лишние символы и пробелы.
$phrase2 = strrev ($phrase_pure); //Реверсируем строку.
    if ($phrase_pure == $phrase2) {
        echo "A roza - upala, na lapu Azora!? - палиндром";
    } else {
        echo "Палиндромы не обнаружены!";
    }
echo "<br />";

/*
34. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов,
а не 5. Решите задачу с помощью одного цикла и функции str_repeat.
x
xx
xxx
xxxx
xxxxx
*/
echo "34. <br />";
for ($i = 1; $i <= 9 ; $i++) {
    echo str_repeat("x", $i) ."<br />";
}
echo "<br />";

/*
35. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов,
а не 5. Решите задачу с помощью одного цикла и функции str_repeat.
1
22
333
4444
55555
*/
echo "35. <br />";
$y = 1;
for ($i = 1; $i <= 9 ; $i+=1) {
    //echo $y++;
    echo str_repeat($y++, $i) ."<br />";
}
echo "<br />";

?>
</body>
</html>